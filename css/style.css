/* việc làm đầu tiên trước khi làm css để reset mặc định */
*{
    margin: 0;
    padding: 0;
    /* không cộng dồn chiều rộng của padding vào kích thước của phần tử */
    box-sizing: border-box;
    /* serif là kiểu các chữ có dấu lòi ra thêm, còn sans-serif là kiểu chữ thẳng */
    font-family: 'Oswald', sans-serif;
    font-size: 16px;
}
.py-5{
    padding: 5rem 0;
}
/* HEADER */
/*margin giá trị auto thì nó sẽ tự động canh giữa */
.container{
    max-width: 1280px;
    margin: 0 auto;
}
/* rgba: red green blue anpha */
.header{
    border-bottom: 1px solid rgba(255,255,255,0.2);
    /* BỎ DIỆN ĐEN HEADER */
    /* background-color: black; */
    /* BỎ DIỆN TÍCH THẺ HEADER CHIẾM */
    position: absolute;
    width: 100%;
}
.header_logo{
    color: white;
    text-decoration: none;
    font-size: 30px;
}
/* CHO THẺ HOME CÓ MÀU ĐỎ KHI NGƯỜI DÙNG ĐANG ĐỨNG Ở TRANG ĐÓ, DÙNG CLASS ACTIVE CHO THẺ */
.header_navbar a.active{
    color: #e62b4a;
}
.header_navbar a{
    color: white;
    text-decoration: none;
    font-weight: 600;
    /* padding-left: 30px; */
    margin-left: 30px;
}
/* hiệu ứng rê chuột vào phần tử đổi màu */
.header_navbar a:hover{
    color: #e62b4a;
}
/* flex được sử dụng ở thẻ cha, các thẻ con nằm trong thẻ cha sẽ nằm chung 1 hàng, với chiều mặc định tính từ trái sang phải và có thể điều chỉnh chiều tính*/
/* float thì dùng ở phần tử nào cần đưa lên 1 hàng (tức là phần tử con nhỏ */
.header_container{
    display: flex;
    /* flex-direction để thay đổi chiều các phần tử con nằm bên trong flex */
    /* row là theo hàng ngang từ trái sang phải */
    /* column là theo cột từ trên xuống */
    /* reverse là đảo chiều ngược lại */
    /* giá trị mặc định nó sẽ như row (theo hàng ngang và chiều từ trái sang phải */
    flex-direction: row;
    /* vị trí mặc định thì các thẻ con sẽ nằm liền kề nhau */
    /* để xác định trục nào là trục chính-phụ thì dựa vào flex-direction sắp theo chiều nào */
    /* justify-content là thay đổi vị trí các thẻ con theo trục chính */
    /* justify-content: space-between; là 2 phần tử đầu và cuối dạt sang 2 bên, các phần tử còn lại chia đều nhau phần ở trong */
    justify-content: space-between;
    /* justify-content: space-around; */
    /* justify-content: space-evenly; là tất cả các phần tử chia khoảng cách đều nhau */
    /* justify-content: flex-start  là dồn về điểm bắt đầu*/
    /* align-items là thay đổi vị trí các thẻ con theo trục phụ */
    align-items: center;
    /* align-items: stretch; nó sẽ kéo dãn chiều cao của các phần tử con bằng phần tử cha */
}
/* BANNER */
.banner{
    background-image: url("../img/home_slider.jpg");
    height: 700px;
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center center;
}
.banner_container{
    /* chỉnh chiều cao bằng chiều cao của banner */
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
}
.banner_container p{
    font-size: 25px;
    color: white;
}
.banner_container h1{
    font-size: 75px;
    color: white;
}
.banner_container button{
    font-size: 16px;
    padding: 10px 30px;
    background-color: #e62b4a;
    color: white;
    border: 1px solid #e62b4a;
    cursor: pointer;
    margin-top: 20px;
}
.banner_container button:hover{
    background-color: #af2239;
}
.banner_container i{
    margin-top: 30px;
    font-size: 30px;
    color: white;
    animation-name: demoMuiten;
    animation-duration: 1s;
    animation-iteration-count: infinite;
}
/* SERVICES */
.service{
    background-color: black;
    color: white;
}
.title{
    text-align: center;
    margin-bottom: 1.5rem;
}
.title p:first-of-type{
    color: #e62b4a;
}
.title p:last-of-type{
    color: gray;
}
.title h1{
    font-size: 3rem;
    font-weight: 400;
}
/* ĐỨNG TẠI THẺ CHA, CÁC THẺ CON SẼ TỰ ĐỘNG LÊN 1 HÀNG */
.service__slide{
    display: flex;
}
.service__slide .service__item{
    color: gray;
    background-color: white;
    width:215px;
    height: 200px;
    /* CÁC THẺ CON Ở TRONG SẼ LÊN 1 HÀNG LÀ: ICON VÀ MÔ TẢ */
    display: flex;
    align-items: center;
    justify-content: center;
    /* SẼ ĐƯA CÁC THẺ CON XUỐNG HÀNG THEO CỘT */
    flex-direction: column;
    text-align: center;
    margin: 10px;
    position: relative;
}
.service__item i{
    font-size: 3rem;
}
/* TẠO 1 ELEMENT, NÓ CŨNG GIỐNG NHƯ 1 THẺ BÌNH THƯỜNG, NHƯNG CÁC DIV Ở DƯỚI NÓ SẼ TỰ ĐỘNG THÊM ELEMENT AFTER LUÔN */
.service__slide .service__item::after{
    content: "";
    width: 5px;
    height: 0;
    background-color: #e62b4a;
    position: absolute;
    top: 0;
    right: 0;
    /* SET THỜI GIAN CHO CHẠY */
    transition: all 0.5s;
}
/* HOVER KHI RÊ CHUỘT CHO ELEMENT AFTER */
.service__slide .service__item:hover::after{
    height: 100%;
}
.slick-dots li button:before{
    color: gray;
    font-size: 1rem;
}
.slick-dots li.slick-active button:before{
    color: #e62b4a;
}
.slick-dots li button:hover:before, .slick-dots li button:focus:before{
    color: white;
}
/* POST */
.post .title p:first-of-type{
    color: #888888;
}
/* GRID: THUỘC TÍNH CỦA CSS ĐỂ DÀN LAYOUT THEO CỘT, HÀNG */
.post__content{
    display: grid;
    /* repeat viết gọn số lần lặp của cột */
    grid-template-columns: repeat(4,1fr);
    /* giãn khoảng cách giữa các hình */
    gap: 2rem;
}
.post__content .post__item img{
    width: 100%;
    height: 100%;
    /* THUỘC TÍNH KÉO DÃN HÌNH KHÔNG BỊ MÉO */
    object-fit: cover;
    /* DÙNG ĐỂ LÀM HÌNH ẢNH MỜ MỜ, phủ 1 lớp */
    filter: contrast(50%);
}
.post__item__1{
    /* thuộc tính gom cột */
    /* cần xác định vị trí của cột ở vị trí số mấy từ trái qua */
    grid-column: 1 / span 2;
    grid-row: 1 / span 2;
}
.post__item__10{
    /* vị trí / số ô muốn gom */
    grid-column: 3 / span 2;
    grid-row: 3 / span 2;
}
.post__item {
    position: relative;
}
.post__overlay{
    background-color: rgba(230, 43, 74, 0.6);
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    opacity: 0;
    transition: all 0.5s;
}
.post__content .post__item:hover .post__overlay{
    opacity: 1;
}
.post__overlay__icon{
    position: absolute;
    top: 2rem;
    right: 2rem;
}
.post__overlay__icon i{
    background-color: white;
    padding: 0.5rem;
    /* di chuyển vị trí xuống dưới so với vị trí mặc định là 0 */
    transform: translateY(50px);
    transition: all 0.5s;
}
/* HOVER VÀO ITEM THÌ VỊ TRÍ ICON SẼ CHẠY TỪ DƯỚI VỀ VỊ TRÍ BAN ĐẦU */
.post__content .post__item:hover .post__overlay__icon i{
    transform: translateY(0px);
}
.post__overlay__icon i:hover{
    background-color: black;
    color: white;
    transition: all 0.5s;
}
.post__overlay__text{
    position: absolute;
    bottom: 2rem;
    left: 2rem;
    transform: translateY(50px);
    transition: all 0.5s;
}
.post__content .post__item:hover .post__overlay__text{
    transform: translateY(0px);
}
.post__overlay__text p{
    color: gray;
}
.post__overlay__text h3{
    color: white;
    font-size: 1.2rem;
}
/* STATISTIC */
.statistic{
    background-color: black;
    color: white;
}
.statistic__content{
    display: flex;
    justify-content: space-between;
    text-align: center;
}
.statistic__content .counter{
    font-size: 3rem;
}
.statistic__content h3{
    color: gray;
}
/* EXPERIENCE */
.experience{
    background-image: url(../img/bussiness_img_1.jpg);
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
    /* HÌNH NỀN ĐỨNG YÊN KHI SCROLL CHUỘT */
    background-attachment: fixed;
}
.experience .title h1{
    color: white;
}
.experience__content video{
    width: 100%;
}
/* CONTACT */
.contact__content{
    display: flex;
    align-items: center;
    width: 70%;
    margin: 30px auto 0;
}
.contact__map{
    width: 60%;
}
.contact__map iframe{
    width: 100%;
    
}
.contact__form{
    width: 40%;
}
.contact__form form{
    display: flex;
    flex-direction: column;
    padding: 0 1rem;
}
.contact__form input, .contact__form textarea{
    font-size: 15px;
    padding: 1rem;
    border: 1px solid #888888;
    border-radius: 2px;
    margin-bottom: 2rem;
}
.contact__form form input[type="button"]{
    padding: 1rem 0;
    color: white;
    background-color: black;
    border: 1px solid black;
    cursor: pointer;
    transition: all 0.5s;
    text-transform: uppercase;
    margin-bottom: 0;
}
.contact__form .button:hover{
    background-color: #e62b4a;
}
/* FOOTER */
.footer{
    background-color: black;
    color: white;
}
.footer__content{
    display: flex;
    justify-content: space-between;
    margin: 0 auto;
    align-items: center;
    padding: 100px 0;
}
.footer__content p{
    font-size: 1rem;
}
.footer__social a{
    width: 54px;
    height: 54px;
    border-radius: 50%;
    background-color: rgba(255, 255, 255, 0.2);
    text-align: center; 
    font-size: 16px;
    display: inline-block;
    /* thuộc tính này để đưa vị trí ở trên xuống dưới or giữa */
    line-height: 54px;
    color: white;
    text-decoration: none;
    margin-left: 5px;
    transition: all 0.5s;
}
.footer__social a:hover{
    background-color: #e62b4a;
}
/* BACK TO TOP */
.backtotop{
    width: 60px;
    height: 60px;
    /* canh giữa theo chiều đứng nằm ở trung tâm hình vuông */
    line-height: 60px;
    background-color: gray;
    color: white;
    position: fixed;
    font-size: 1rem;
    border-radius: 5px;
    right: 20px;
    bottom: 20px;
    /* canh giữa theo chiều ngang */
    text-align: center;
    /* ẩn nút backtotop khi đang ở trên đầu trang */
    /* nút không nhìn thấy nhưng thực tế nó vẫn nằm ở đó */
    opacity: 0;
    /* ẩn vị trí của nó luôn */
    visibility: hidden;
}
/* COPY TỪ HƯỚNG DẪN THƯ VIỆN JS BACKTOTOP */
.cd-top--is-visible { 
    visibility: visible;
    opacity: 1;
  }
  .cd-top--fade-out { 
    opacity: 0.5;
  }
  /* TỰ VIẾT HIỆU ỨNG */
  .square{
    width: 200px;
    height: 200px;
    background-color: red;
    position: relative;
    /* gọi tên hiệu ứng đến phần tử có class square */
    animation-name: demoAnimation ;
    /* khoảng thời gian hiệu ứng chạy */
    animation-duration: 8s;
    /* số lần cho hiệu ứng lặp lại */
    /* muốn lặp lại vô hạn thì dùng giá trị infinite */
    /* còn nesu muốn lặp lại theo số lần thì dùng số */
    animation-iteration-count: infinite;
  }
  /* định nghĩa - tạo ra 1 hiệu ứng */
  /* cú pháp: */
  @keyframes demoAnimation {
    /* CÁCH 1 */
    /* from{}

    to{} */
    /* CÁCH 2 THÌ CÓ THỂ CHIA NHỎ KHOẢNG CÁCH RA*/
    0%{
        top: 0;
        left: 0;
    }

    25%{
        top: 0;
        left: 400px;
        background-color: yellow;
    }

    50%{
        top: 400px;
        left: 400px;
        background-color: green;
    }

    75%{
        top: 400px;
        left: 0;
        background-color: blue;
    }

    100%{
        top: 0;
        left: 0;
    }
  }

  @keyframes demoMuiten {
    from{
        opacity: 1;
        /* DI CHUYỂN THEO TRỤC DỌC TỪ VỊ TRÍ BAN ĐẦU LÀ 0 */
        transform: translateY(0);
    }

    to{
        opacity: 0;
        /* DI CHUYỂN THEO TRỤC DỌC ĐẾN VỊ TRÍ TỪ 0 ĐẾN 40PX */
        transform: translateY(100px);
    }
  }